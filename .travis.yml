dist: xenial
os: linux
language: ruby

env:
  global:
    - REGISTRY_USER=nyutelemetryrobot
    # REGISTRY_PASS=...
    - secure: "tzd1LpQ4MzCHB2FMSDjJec0hEi9SLrZHnILvNb1pj7P/agnFtUduC37aCcGSyrecfC4VF84wQNMYfndWn0L+M5XG1VWUuHcRYxJF7/F9ytkT91ZbZaUzaUy1m29up4C+jQdvYL4bR5WAMn330/SZiWF1Qr9N2DsLqGj4oYHOD6eOK9P1skmYK2CU5i1tjcjz0OOn2rxdGKTPxOwSg+8/OINYLVMkcK0iTAvPMXqR9UQjZqNmD+Z60HWEBF2xZuGXFXQ43sOilXrEY9FxrnQEFVeAJ5KzK9YSX38rJdTWasc0BFkyjSagFUCD9tvdQTc6+NOK4U7MLDCWJsMVwYnbV2tTmEA5bjPgocRsyX2+uBhEuSUW1RKP2MWtq0EmyYwnDHgpIWsuqnZlshtoA+ZEa7TcQsZqjjPqC6hBxVU32dVJDsUSwOLZ+xO+eyfb203az6PXldbetl48D5UN+qDRWlyr2T++IaZAGJHBNzkCMeyOURVhFnIxkFMEKB075PkKWf2M9cmN4hB3UTCNmo820Wpw1Cn2j/shMZ4KgKtnCXFDchGEpLzyUzdLeBZple5bPOGuw9xWUCn+V04kDewO0m/53DUz8xu+7bG7QFi4cFhqguPGge35ULnWPYgi+NkAW3BO1eAj8wgYB1gfZ10YNAjG4XYyaIrgTFh3h+SNwgk="

jobs:
  include:
    # run django tests
    - language: python

      python: '3.6'

      addons:
        firefox: latest

      dist: xenial
      services:
        - xvfb
        - postgresql

      before_install:
        - wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
        - mkdir geckodriver
        - tar -xzf geckodriver-v0.26.0-linux64.tar.gz -C geckodriver
        - export PATH=$PATH:$PWD/geckodriver

      install:
        - pip install --upgrade pip
        - pip install -r requirements.txt
        - pip install -r test-requirements.txt

      before_script:
        - psql -c 'create database mercury;' -U postgres
        - python manage.py migrate
        - python manage.py collectstatic --noinput

      script:
        - black --check --diff .
        # modify .flake8 env file to update flake8 configuration
        - flake8 .
        # modify .coveragerc env file to update test configuration
        - coverage run manage.py test

      after_script:
        - coveralls
        - cat geckodriver.log

    # run the hardware tests
    - language: bash
      
      # python: '3.6'
      
      services:
          - docker

      before_script:
        - docker pull nyumotorsportstelemetryorg/mercury || true
        
      script:
        # prepare qemu for arm emulation on x64 hardware
        - docker run --rm --privileged multiarch/qemu-user-static:register --reset
        # build image
        # - docker build -t gcivil-nyu-org/spring2020-cs-gy-9223-class .
        - docker build --pull --cache-from nyumotorsportstelemetryorg/mercury --tag nyumotorsportstelemetryorg/mercury .
        # basic help world test to see if it's working
        - docker run nyumotorsportstelemetryorg/mercury grep -q "Hello, Docker!" hello.txt
        # - black --check --exclude "migrations/" hardware
      
      after_script:
        - docker images
      
      before_deploy:
        - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
      
      deploy:
        provider: script
        script: docker push nyumotorsportstelemetryorg/mercury
        on:
          branch: master
            
