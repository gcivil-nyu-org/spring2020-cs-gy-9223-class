# Sync URL where other nodes can contact this node to push/pull data or register.
# http://{hostname}:31415/sync/engine0
# sync.url=http://localhost:31415/sync/engine0
sync.url=

# Put the same value with sync.url here
# registration.url=http://localhost:31415/sync/engine0
registration.url=

db.user=postgres
db.password=

# https://jdbc.postgresql.org/documentation/80/connect.html
# db.url=jdbc:postgresql://localhost:5432/mercury
db.url=jdbc:postgresql://localhost:5432/mercury










###########################################################################
# Do not change anything below this line
###########################################################################

db.driver=org.postgresql.Driver

# Friendly name to refer to this node from command line
engine.name=engine0

# Node group this node belongs to, which defines what it will sync with who.
# Must match the sym_node_group configuration in database.
group.id=group0

# External ID for this node, which is any unique identifier you want to use.
external.id=000

# How often to run purge job,
job.purge.period.time.ms=7200000

# How to run routing (in millis), which puts changes into batches.
#  job.routing.period.time.ms=5000
job.routing.period.time.ms=1000

# How often to run push (in millis), which sends changes to other nodes.
job.push.period.time.ms=1000

# How often to run pull (in millis), which receives changes from other nodes.
job.pull.period.time.ms=1000

# Automatically register new nodes when they request it
# If this is false, accept the registration requests using "symadmin open-registration" command.
auto.registration=true

# When this node sends an initial load of data to another node, first send table create scripts.
initial.load.create.first=true
